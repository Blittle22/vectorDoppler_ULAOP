// Author : Brandon Little
// Created : Fall 2022
// This is the configuration file for a Vecetor Doppler mode in the ULA-OP 64 with a LA332E probe
// Commetns were copied from the ULA-OP manual cfg file description section and are not my own work

[NAME]
//A string that identifies the name of the mode
    //The name is displayed inside “ULA-OP Starter” application when the mode is selected
Name = Vector Doppler   //<sString>


[COMMENT]
//A string containing a comment for the mode
    //The comment is displayed inside “ULA-OP Starter” application when the mode is selected
CommentMode = Vector Doppler on LA332E  //<sString>

//A string containing a comment for the transmission and reception settings
    //The comment is displayed inside “ULA-OP Starter” application when the mode is selected
CommentType = Working developmental prototype   //<sString>


[TREE]
//A string that describes the windows layout in the main display of the real-time software
    //Refer to the paragraph “Display” in section 4 of the ULA-OP manual for more information
Aspect = 2V2H000    //<sString>

//A list of integers that describes the windows layout in the main display of the real-time software
    //Refer to the paragraph “Display” in section 4 of the ULA-OP manual for more information
Ratio = 75,25,50,50 //<i> {,<i>...}


[SEQUENCER]
//List of .ula files contributing to the mode
    //Each .ula file describes a beam or group of beams employed in the system
item0 = vectorDoppler_ula.ula   //Item<i> = <sFileName>


//Defines the keyboard shortcut keys of an item
    //iItem is the index of the related item
    //eControl is the name of the parameter to be controlled by the shortcuts
        //“FBurst” (0)
        //“TgcA” (1)
        //“TgcB” (2)
        //“Focus” (3)
        //“TxAmp” (4)
        //“TxNC” (5)
        //“StartingDepth” (6)
    //sKKIncrement is the reference to the keyboard key to increment the value of the parameter declared in eControl
    //sKKDecrement is the reference to the keyboard key to decrement the value of the parameter declared in eControl
    //iStep is the incremental step value
        //The measuring unit of the step depends on the parameter specified in the eControl field
            //A pure number of indexes for “Fburst”
            //decibels for “TgcA”
            //tenths of decibels per centimetre for “TgcB”
            //millimetres for “Focus”
            //a hundredth of a pure number for “TxAmp”
            //a pure number of cycles for “TxNC”
            //pure number of gates for “StartingDepth”
DefItemKey0 = 0,Focus,a,q,2             //<iItem>, <eControl> {,<sKKIncrement>} {,<sKKDecrement>} {,<iStep>}}

DefItemKey1 = 0,FBurst,w,s,1            //<iItem>, <eControl> {,<sKKIncrement>} {,<sKKDecrement>} {,<iStep>}}
DefItemKey2 = 0,TgcA,PgUp,PgDown,1      //<iItem>, <eControl> {,<sKKIncrement>} {,<sKKDecrement>} {,<iStep>}}
DefItemKey3 = 0,TgcB,Home,End,5         //<iItem>, <eControl> {,<sKKIncrement>} {,<sKKDecrement>} {,<iStep>}}

DefItemKey4 = 1,FBurst,t,g,1            //<iItem>, <eControl> {,<sKKIncrement>} {,<sKKDecrement>} {,<iStep>}}
DefItemKey5 = 1,TgcA,y,h,1              //<iItem>, <eControl> {,<sKKIncrement>} {,<sKKDecrement>} {,<iStep>}}
DefItemKey6 = 1,TgcB,u,j,5              //<iItem>, <eControl> {,<sKKIncrement>} {,<sKKDecrement>} {,<iStep>}}

//LinkedItems optional property not used here


[WORKINGSET]
//Upon starting, ULA-OP Modula merges the WORKINGSET
//section of the Probe configuration file (*.wks) with the
//WORKINGSET section of the configuration file (*.cfg). The
//configuration file takes precedence over the Probe
//configuration file, in such a way that a key contained in the
//former overrides any key with the same name that may be
//found in the latter.

//Specifies the sound speed inside the medium, expressed in meters per second [m/s]
//Place this here and not in the .wks file per the ULA-OP manual
SoundSpeed = 1540   //<iSpeed>


[SSG]
//List of Pulse Repetition Frequency (PRF) values, expressed in Hertz [Hz]
//In ULA-OP Modula application the user can select the desired system PRF choosing one from this list
PrfsMap = 400, 600, 1000,2000,3000,4000, 6000, 8000     //<i> {,<i>...}

//Other PRF parameters
    //iPrf is the PRF value which the real-time application starts with, expressed in Hertz [Hz]
    //eState is the PRF state at the start of the application:
        //“Off” (0)
        //“On” (1)
        //“Default” (2)(default)
    //sKKToggle is the reference to the keyboard key to toggle between freeze and unfreeze
    //sKKIncrement is the reference to the keyboard key to increment the PRF value
    //sKKDecrement is the reference to the keyboard key to decrement the PRF value
    //eSave is the PRF state after the save window closes:
        //“Off” (0)
        //“On” (1)
        //“Restore” (2)(default)
Prf = 4000,,z,x,c   //{<iPrf>} {,<eState>} {,<sKKToggle>} {,<sKKIncrement>} {,<sKKDecrement} {,<eSave>}}



[SAVEOPT]
//Save parameters
    //sKKSave is the reference to the keyboard key to open the save window or to automatically save if the enumeration mode is active
    //iAutoSaveTime sets the auto-save time interval expressed in ms
        //If this value is negative, the application automatically calculates the minimum time needed in order to fulfil all the slices that should be saved
        //This parameter is ignored if the iAutoSavePris field is set (i.e. is not equal to zero)
    //iAutoSavePris sets the auto-save interval expressed in number of PRIs
        //If this value is negative, the application automatically calculates the minimum number of PRIs needed in order to fulfil all the slices that should be saved
    //sKKAutoSave is the reference to the keyboard key to toggle the auto-save mode on and off
Auto = F1, -1   //{sKKSave} {,iAutoSaveTime} {,iAutoSavePris} {,sKKAutoSave}}


[ACQUIREIQ]
//Declares a slice and defines its structure.
    //IQ slices reside in DSP memory and contain demodulated (IQ) samples supplied by the FPGA
    //iGates shall be between 4 to 512, in steps of 4
    //iPris represents the number of pulse repetition intervals
    //iStartGate is the index (zero by default) in the FPGA buffer where to retrieve incoming samples
        //The buffer is divided into three sections:
            //first section contains demodulated samples and is mapped from index 0 to index 511
            //The second section contains auxiliary analog samples and is mapped at index 512
            //The last section contains RF samples and is mapped from index 1024 to index 2023
    //sName assigns a name to the slice
        //No forbidden characters or underscores
    //iPrfDivisor specifies the ratio between the system PRF and the equivalent PRF (0 by default)
    //eSave determines if the slice should be saved by default or not:
        //“NoSave” (0) (default)
        //“Save” (1)
slice0 = 512, 8192, 0, BModeSliceIQ, 0, 0       //<iGates>, <iPris> {,<iStartGate>} {,<sName>} {,<iPrfDivisor>} {,<eSave>}}
slice1 = 512, 8192, 0, DopplerSliceIQ, 0, 0     //<iGates>, <iPris> {,<iStartGate>} {,<sName>} {,<iPrfDivisor>} {,<eSave>}}

[ACQUIRERF]
//Determines the default radiofrequency acquisition type, when the real-time application starts
    //“None” (0)
    //“Pre8” (1) pre-beamforming 8 bits
    //“Pre12” (2) pre-beamforming 12 bits
    //“Post” (3)
    //“Debug” (4)
RfType = 3  //<eType>


[ACQUIRERF_PRE8]


[ACQUIRERF_PRE12]


[ACQUIRERF_POST]
slice3 = 16384, 8192, 0, postBFSlice, 0, 1


[BLOCKSEQUENCER]
pri0 = 0, 1, 0, 0, 0
pri1 = 1, 0, 1, 0, 1


[MODULES]
module0 = VECDOP1


[VECDOP1]
ModuleFileName = StdProfile.mod
Threshold = 15
Dynamic = 3
FFTWindow = Hanning
Window = 1
Slice = Slice1
RatioDivFactor = 30, 2
ViewItem = Item1
SpecialFilter = None

[StdProfile.mod]
ModuleName = CModProfile
SizeY = 512
FFTSize = 128
Threshold = 15
Dynamic = 3
VideoFilter = 1
FFTWindow = 1
SpecialFilter = 0

